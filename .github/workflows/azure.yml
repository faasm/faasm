name: "Azure Integration Tests"

# These tests provision resources on Faasm's Azure subscription to run
# integration tests on a production environment. To limit the cost of running
# them, we only trigger them on workflow dispatch. In order to run them, you
# need to navigate to the Actions tab on GitHub, and click the run button.
# Additionally, we also run them when we change the deployment files, to check
# that we don't break anything
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "deploy/**yml"

defaults:
  run:
    shell: bash

jobs:
  aks:
    runs-on: self-hosted
    strategy:
      fail-fast: true
      # Running two Kubernetes clusters side-by-side from the same user in the
      # same machine creates conflicts in the local .kubeconfig file. A
      # possible fix would be to use one .kubeconfig file per cluster, and make
      # all k8s commands point to that .kubeconfig file. Given that this
      # workflow is not latency-sensitive, we actually don't mind that jobs are
      # run one after the other, so we don't implement the fix.
      max-parallel: 1
      matrix:
        wasm_vm: [wamr, wavm, sgx]
    env:
      CLUSTER_NAME_BASE: gha-cluster
      WASM_VM: ${{ matrix.wasm_vm }}
    steps:
      - name: "Check out the experiment-base code"
        uses: actions/checkout@v3
        with:
          repository: faasm/experiment-base
          path: experiment-base
      - name: "Create a unique cluster name"
        run: |
          echo "CLUSTER_NAME=${CLUSTER_NAME_BASE}-${{ matrix.wasm_vm }}-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}" >> $GITHUB_ENV
      - name: "Install kubectl"
        run: ./bin/inv_wrapper.sh k8s.install-kubectl
        working-directory: ${{ github.workspace }}/experiment-base
      - name: "Start a managed k8s cluster on Azure's Kubernetes Service"
        run: |
          [[ "${{ matrix.wasm_vm }}" == "sgx" ]] && SUFFIX_SGX="True" || SUFFIX_SGX="False"
          ./bin/inv_wrapper.sh cluster.provision --name ${{ env.CLUSTER_NAME }} --vm Standard_DC4s_v3 --nodes 4 --location eastus2 --sgx ${SUFFIX_SGX}
          ./bin/inv_wrapper.sh cluster.credentials --name ${{ env.CLUSTER_NAME }}
        working-directory: ${{ github.workspace }}/experiment-base
      - name: "Install faasmctl"
        run: pip3 install faasmctl==0.8.3
      - name: "Deploy Faasm on k8s cluster"
        run: faasmctl deploy.k8s --workers=4
      - name: "Build, upload and run a simple CPP function"
        run:  faasmctl cli.cpp --cmd "./bin/inv_wrapper.sh func demo hello func.upload demo hello func.invoke demo hello"
        env:
          FAASM_INI_FILE: ./faasm.ini
      - name: "Always delete AKS cluster"
        if: always()
        run: ./bin/inv_wrapper.sh cluster.delete --name ${{ env.CLUSTER_NAME }}
        working-directory: ${{ github.workspace }}/experiment-base
      - name: "Chown all files"
        if: always()
        run: sudo chown -R $(id -u):$(id -g) .
