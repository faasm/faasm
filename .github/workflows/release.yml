name: Release

# This file is very verbose, but things have to be split into separate jobs to
# allow them to run in parallel. There seems to be no way to share the Docker
# build context between jobs, so the Docker set-up has to be copied in each one.

on:
  push:
    tags:
      - 'v*.*.*'

# Cancel previous running actions for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-dep-free-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [redis, minio, base]
    steps:
      # Make more space to build images
      - name: "Maximize build space"
        uses: easimon/maximize-build-space@master
        if: ${{ (steps.docker-image-cache-probe.outputs.cache-hit != 'true') || (inputs.read-only != 'false') }}
        with:
          # Leave 35 GB for the / partition for docker images (stored under
          # /var/lib/docker)
          root-reserve-mb: 35600
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'false'
          remove-dotnet: 'true'
          remove-haskell: 'true'

      - name: "Get the code"
        uses: actions/checkout@v4
      - name: "Get tag version"
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v3
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
      - name: "Log in to DockerHub"
        uses: docker/login-action@v3
        with:
          registry: faasm.azurecr.io
          username: ${{ secrets.ACR_SERVICE_PRINCIPAL_ID }}
          password: ${{ secrets.ACR_SERVICE_PRINCIPAL_PASSWORD }}

      - name: "Build container image"
        uses: docker/build-push-action@v5
        with:
          push: true
          file: docker/${{ matrix.image }}.dockerfile
          build-args: FAASM_VERSION=${{ env.TAG_VERSION }}
          context: .
          tags: faasm.azurecr.io/${{ matrix.image }}:${{ env.TAG_VERSION }}

  build-dep-on-base-images:
    needs: build-dep-free-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [cli, upload, worker]
    steps:
      # Make more space to build images
      - name: "Maximize build space"
        uses: easimon/maximize-build-space@master
        if: ${{ (steps.docker-image-cache-probe.outputs.cache-hit != 'true') || (inputs.read-only != 'false') }}
        with:
          # Leave 35 GB for the / partition for docker images (stored under
          # /var/lib/docker)
          root-reserve-mb: 35600
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'false'
          remove-dotnet: 'true'
          remove-haskell: 'true'

      - name: "Get the code"
        uses: actions/checkout@v4
      - name: "Get tag version"
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v3
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
      - name: "Log in to DockerHub"
        uses: docker/login-action@v3
        with:
          registry: faasm.azurecr.io
          username: ${{ secrets.ACR_SERVICE_PRINCIPAL_ID }}
          password: ${{ secrets.ACR_SERVICE_PRINCIPAL_PASSWORD }}

      - name: "Build container image"
        uses: docker/build-push-action@v5
        with:
          push: true
          file: docker/${{ matrix.image }}.dockerfile
          build-args: |
            FAASM_VERSION=${{ env.TAG_VERSION }}
            FAASM_SGX_MODE=Disabled
          context: .
          tags: faasm.azurecr.io/${{ matrix.image }}:${{ env.TAG_VERSION }}

  build-base-sgx:
    needs: build-dep-free-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sgx-mode: [[-sgx, Hardware], [-sgx-sim, Simulation]]
    steps:
      # Make more space to build images
      - name: "Maximize build space"
        uses: easimon/maximize-build-space@master
        if: ${{ (steps.docker-image-cache-probe.outputs.cache-hit != 'true') || (inputs.read-only != 'false') }}
        with:
          # Leave 35 GB for the / partition for docker images (stored under
          # /var/lib/docker)
          root-reserve-mb: 35600
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'false'
          remove-dotnet: 'true'
          remove-haskell: 'true'

      - name: "Get the code"
        uses: actions/checkout@v4
      - name: "Get tag version"
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v3
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
      - name: "Log in to DockerHub"
        uses: docker/login-action@v3
        with:
          registry: faasm.azurecr.io
          username: ${{ secrets.ACR_SERVICE_PRINCIPAL_ID }}
          password: ${{ secrets.ACR_SERVICE_PRINCIPAL_PASSWORD }}

      - name: "Build container image"
        uses: docker/build-push-action@v5
        with:
          push: true
          file: docker/base-sgx.dockerfile
          build-args: |
            FAASM_VERSION=${{ env.TAG_VERSION }}
            FAASM_SGX_MODE=${{ matrix.sgx-mode[1] }}
          context: .
          tags: faasm.azurecr.io/base${{ matrix.sgx-mode[0] }}:${{ env.TAG_VERSION }}

  build-worker-cli-sgx:
    needs: build-base-sgx
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [worker, cli]
        sgx-mode: [[-sgx, Hardware], [-sgx-sim, Simulation]]
    steps:
      # Make more space to build images
      - name: "Maximize build space"
        uses: easimon/maximize-build-space@master
        if: ${{ (steps.docker-image-cache-probe.outputs.cache-hit != 'true') || (inputs.read-only != 'false') }}
        with:
          # Leave 35 GB for the / partition for docker images (stored under
          # /var/lib/docker)
          root-reserve-mb: 35600
          remove-android: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'false'
          remove-dotnet: 'true'
          remove-haskell: 'true'

      - name: "Get the code"
        uses: actions/checkout@v4
      - name: "Get tag version"
        run: echo "TAG_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV
      - name: "Work out the right docker tag"
        run: echo "DOCKER_TAG=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@v3
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3
      - name: "Log in to DockerHub"
        uses: docker/login-action@v3
        with:
          registry: faasm.azurecr.io
          username: ${{ secrets.ACR_SERVICE_PRINCIPAL_ID }}
          password: ${{ secrets.ACR_SERVICE_PRINCIPAL_PASSWORD }}

      - name: "Build container image"
        uses: docker/build-push-action@v5
        with:
          push: true
          file: docker/${{ matrix.image }}.dockerfile
          build-args: |
            FAASM_VERSION=${{ env.TAG_VERSION }}
            FAASM_SGX_PARENT_SUFFIX=${{ matrix.sgx-mode[0] }}
            FAASM_SGX_MODE=${{ matrix.sgx-mode[1] }}
          context: .
          tags: faasm.azurecr.io/${{ matrix.image }}${{ matrix.sgx-mode[0] }}:${{ env.TAG_VERSION }}
