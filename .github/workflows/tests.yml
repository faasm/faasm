name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  formatting:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    container:
      image: faasm/cli:0.5.6
    defaults:
      run:
        working-directory: /usr/local/code/faasm
    steps:
      - name: "Fetch ref"
        run: git fetch origin ${GITHUB_REF}:ci-branch
      - name: "Check out branch"
        run: git checkout --force ci-branch
      - name: "Run CMake to regenerate compile commands"
        run: inv -r faasmcli/faasmcli dev.cmake --build Release
      # --- Formatting checks ---
      - name: "Ensure all Python deps up-to-date"
        run: pip3 install -r faasmcli/requirements.txt
      - name: "Python formatting check"
        run: ./bin/check_python.sh
      - name: "Run C/C++ formatting"
        run: ./bin/run_clang_format.sh
      - name: "Check C/C++ formatting changes"
        run: git diff --exit-code
      - name: "Run C/C++ linter"
        run: ./bin/run_clang_tidy.sh

  build:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    env:
      CGROUP_MODE: off
      HOST_TYPE: ci
      LOG_LEVEL: info
      MAX_FAASLETS: 5
      NETNS_MODE: off
      REDIS_QUEUE_HOST: redis
      REDIS_STATE_HOST: redis
    container:
      image: faasm/cli:0.5.6
    defaults:
      run:
        working-directory: /usr/local/code/faasm
    services:
      redis:
        image: faasm/redis:0.5.6
        ports:
          - 6379:6379
    steps:
      # --- Check out code ---
      - name: "Fetch ref"
        run: git fetch origin ${GITHUB_REF}:ci-branch
      - name: "Check out branch"
        run: git checkout --force ci-branch
      - name: "Log commits"
        run: git log -3
      # --- CPU information ---
      - name: "CPU info"
        run: cat /proc/cpuinfo
      - name: "Get CPU model name"
        run: echo "CPU_MODEL=$(./bin/print_cpu.sh)" >> $GITHUB_ENV
      - name: "Print CPU model"
        run: echo "${{ env.CPU_MODEL}}"
      # --- Cache ---
      - name: "Configure machine code cache"
        uses: actions/cache@v2
        with:
          path: /usr/local/faasm/object
          key: ${{ env.CPU_MODEL }}-machine-code
      # --- Code build ---
      - name: "Build dev tools"
        run: inv -r faasmcli/faasmcli dev.tools --build Release
      # --- WASM compilation ---
      - name: "Compile libraries"
        run: inv -r faasmcli/faasmcli libs.toolchain --clean
      - name: "Compile code"
        run: inv -r faasmcli/faasmcli compile.local --clean
      # --- Environment set-up ---
      - name: "Run codegen"
        run: inv -r faasmcli/faasmcli codegen.local
      - name: "Run python codegen"
        run: inv -r faasmcli/faasmcli python.codegen
      - name: "Copy Python functions into place"
        run: inv -r faasmcli/faasmcli upload.user python --py --local-copy
      - name: "Clear existing pyc files"
        run: inv -r faasmcli/faasmcli python.clear-runtime-pyc
      # --- Test run ---
      - name: "Run the tests"
        run: /build/faasm/bin/tests
