name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-20.04
    env:
      CGROUP_MODE: off
      NETNS_MODE: off
      HOST_TYPE: ci
      REDIS_STATE_HOST: redis
      REDIS_QUEUE_HOST: redis
      LOG_LEVEL: info
      MAX_FAASLETS: 5
    container:
      image: faasm/cli:0.5.0
    defaults:
      run:
        working-directory: /usr/local/code/faasm
    services:
      redis:
        image: faasm/redis:0.5.0
        ports:
          - 6379:6379
    steps:
      # --- Sanity checks ---
      - name: "Working directory"
        run: pwd
      - name: "Working directory contents"
        run: ls -al
      # --- Check out code ---
      - name: "Fetch ref"
        run: git fetch origin ${GITHUB_REF}:ci-branch
      - name: "Check out branch"
        run: git checkout --force ci-branch
      - name: "Log commits"
        run: git log -3
      # --- Formatting checks ---
      - name: "Python formatting check"
        run: ./bin/check_black.sh
      # Uncomment when all formatting done
      - name: "Run C/C++ formatting"
        run: ./bin/run_clang_format.sh
      - name: "Check C/C++ formatting changes"
        run: git diff --exit-code
      # --- Code build ---
      - name: "Rerun cmake"
        run: inv -r faasmcli/faasmcli dev.cmake
      - name: "Build dev tools"
        run: inv -r faasmcli/faasmcli dev.tools
      # --- WASM compilation ---
      - name: "Compile libraries"
        run: inv -r faasmcli/faasmcli libs.toolchain
      - name: "Compile demo code"
        run: inv -r faasmcli/faasmcli compile.user demo
      - name: "Compile errors code"
        run: inv -r faasmcli/faasmcli compile.user errors
      - name: "Compile MPI code"
        run: inv -r faasmcli/faasmcli compile.user mpi
      - name: "Compile Python function"
        run: inv -r faasmcli/faasmcli compile python py_func
      - name: "Compile OMP functions"
        run: inv -r faasmcli/faasmcli compile.user omp
      # --- Environment set-up ---
      - name: "Set up test lib"
        run: inv -r faasmcli/faasmcli libs.fake
      - name: "Run codegen"
        run: inv -r faasmcli/faasmcli codegen.local
      - name: "Run WAMR codegen"
        run: inv -r faasmcli/faasmcli codegen demo echo --wamr
      - name: "Copy Python functions into place"
        run: inv -r faasmcli/faasmcli upload.user python --py --local-copy
      - name: "Make sure permissions are properly set"
        run: chown -R root:root /usr/local/faasm
      # --- Test run ---
      - name: "Run the tests"
        run: ./bin/tests
        working-directory: /build/faasm

