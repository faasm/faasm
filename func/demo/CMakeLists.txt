set(FAASM_USER demo)

function(demo_func exec_name dir_path)
    faasm_func(${exec_name} ${dir_path})

    # Add to list of all demo funcs
    set(ALL_DEMO_FUNCS ${ALL_DEMO_FUNCS} ${exec_name} PARENT_SCOPE)
endfunction(demo_func)

demo_func(abort abort.cpp)
demo_func(argv argv.cpp)
demo_func(brk brk.cpp)
demo_func(calloc calloc.cpp)
demo_func(chain chain.cpp)
faasm_func_c(c_example c_example.c)
demo_func(cpp_example cpp_example.cpp)
#demo_func(curl_net curl_net.cpp)
demo_func(dummy dummy.cpp)
demo_func(echo echo.cpp)
demo_func(exit exit.cpp)
demo_func(errno errno.cpp)
demo_func(fcntl fcntl.cpp)
demo_func(fibonacci fibonacci.cpp)
demo_func(fprintf fprintf.cpp)
demo_func(fread fread.cpp)
demo_func(fstat fstat.cpp)
demo_func(getdents getdents.cpp)
demo_func(getenv getenv.cpp)
demo_func(getpwuid getpwuid.cpp)
demo_func(heap heap.cpp)
demo_func(hello hello.cpp)
demo_func(increment increment.cpp)
demo_func(listdir listdir.cpp)
demo_func(malloc malloc.cpp)
demo_func(matrix matrix.cpp)
demo_func(memcpy memcpy.cpp)
demo_func(memmove memmove.cpp)
demo_func(mmap mmap.cpp)
demo_func(net net.cpp)
demo_func(new_obj new_obj.cpp)
demo_func(noop noop.cpp)
demo_func(optarg optarg.cpp)
demo_func(print print.cpp)
demo_func(ptr_ptr ptr_ptr.cpp)
demo_func(random random.cpp)
demo_func(read_conf read_conf.cpp)
demo_func(restore restore.cpp)
demo_func(simple simple.cpp)
demo_func(sizes sizes.cpp)
demo_func(snapshot snapshot.cpp)
demo_func(stackheap stackheap.cpp)
demo_func(stat stat.cpp)
demo_func(state_sync state_sync.cpp)
demo_func(state_async state_async.cpp)
demo_func(state_offset state_offset.cpp)
demo_func(state_shared_write state_shared_write.cpp)
demo_func(state_shared_write_offset state_shared_write_offset.cpp)
demo_func(state_shared_read state_shared_read.cpp)
demo_func(state_shared_read_offset state_shared_read_offset.cpp)
demo_func(stateop stateop.cpp)
demo_func(stderr stderr.cpp)
demo_func(string string.cpp)
demo_func(sysconf sysconf.cpp)
demo_func(time time.cpp)
demo_func(time_of_day time_of_day.cpp)
demo_func(uname uname.cpp)
demo_func(x2 x2.cpp)

faasm_dynamic_func(dynlink dynlink.cpp)
set(ALL_DEMO_FUNCS ${ALL_DEMO_FUNCS} dynlink PARENT_SCOPE)

# Custom target to group all the demo functions
add_custom_target(demo_all_funcs DEPENDS ${ALL_DEMO_FUNCS})
