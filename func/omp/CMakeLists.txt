set(FAASM_USER omp)

if(FAASM_BUILD_TYPE STREQUAL "wasm")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fopenmp")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fopenmp")
else()
    find_package(OpenMP REQUIRED)
    include_directories(${OPENMP_INCLUDE_DIR})
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
endif()

function(omp_func exec_name dir_path)
    faasm_func(${exec_name} ${dir_path})

    if(FAASM_BUILD_TYPE STREQUAL "knative-native")
        set(EXEC_NAME ${exec_name}-knative)
    else()
        set(EXEC_NAME ${exec_name})
    endif()

    if (FAASM_BUILD_TYPE STREQUAL "wasm")
        target_link_libraries(${EXEC_NAME} faasmp)
    else ()
        target_link_libraries(${EXEC_NAME} pthread)
    endif ()
endfunction(omp_func)

omp_func(omp_checks omp_checks.cpp)
omp_func(header_api_support header_api_support.cpp)
omp_func(hellomp hellomp.cpp)
omp_func(simple_master simple_master.cpp)
omp_func(simple_barrier simple_barrier.cpp)
