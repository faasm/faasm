DEFINE_INTRINSIC_FUNCTION(emEnv, "setTempRet0", void, setTempRet0 , I32 a) {
 	util::getLogger()->debug("S - setTempRet0 - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "getTempRet0", I32, getTempRet0 ) {
 	util::getLogger()->debug("S - getTempRet0");
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "invoke_ii", I32, invoke_ii , I32 a, I32 b) {
 	util::getLogger()->debug("S - invoke_ii - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "invoke_iii", I32, invoke_iii , I32 a, I32 b, I32 c) {
 	util::getLogger()->debug("S - invoke_iii - {} {} {}", a, b, c);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "invoke_iiii", I32, invoke_iiii , I32 a, I32 b, I32 c, I32 d) {
 	util::getLogger()->debug("S - invoke_iiii - {} {} {} {}", a, b, c, d);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "invoke_iiiii", I32, invoke_iiiii , I32 a, I32 b, I32 c, I32 d, I32 e) {
 	util::getLogger()->debug("S - invoke_iiiii - {} {} {} {} {}", a, b, c, d, e);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "invoke_vi", void, invoke_vi , I32 a, I32 b) {
 	util::getLogger()->debug("S - invoke_vi - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "invoke_vii", void, invoke_vii , I32 a, I32 b, I32 c) {
 	util::getLogger()->debug("S - invoke_vii - {} {} {}", a, b, c);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "invoke_viiii", void, invoke_viiii , I32 a, I32 b, I32 c, I32 d, I32 e) {
 	util::getLogger()->debug("S - invoke_viiii - {} {} {} {} {}", a, b, c, d, e);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___clock_gettime", I32, ___clock_gettime , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___clock_gettime - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_allocate_exception", I32, ___cxa_allocate_exception , I32 a) {
 	util::getLogger()->debug("S - ___cxa_allocate_exception - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_begin_catch", I32, ___cxa_begin_catch , I32 a) {
 	util::getLogger()->debug("S - ___cxa_begin_catch - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_current_primary_exception", I32, ___cxa_current_primary_exception ) {
 	util::getLogger()->debug("S - ___cxa_current_primary_exception");
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_decrement_exception_refcount", void, ___cxa_decrement_exception_refcount , I32 a) {
 	util::getLogger()->debug("S - ___cxa_decrement_exception_refcount - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_increment_exception_refcount", void, ___cxa_increment_exception_refcount , I32 a) {
 	util::getLogger()->debug("S - ___cxa_increment_exception_refcount - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_pure_virtual", void, ___cxa_pure_virtual ) {
 	util::getLogger()->debug("S - ___cxa_pure_virtual");
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_rethrow_primary_exception", void, ___cxa_rethrow_primary_exception , I32 a) {
 	util::getLogger()->debug("S - ___cxa_rethrow_primary_exception - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_throw", void, ___cxa_throw , I32 a, I32 b, I32 c) {
 	util::getLogger()->debug("S - ___cxa_throw - {} {} {}", a, b, c);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_uncaught_exception", I32, ___cxa_uncaught_exception ) {
 	util::getLogger()->debug("S - ___cxa_uncaught_exception");
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall114", I32, ___syscall114 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall114 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall121", I32, ___syscall121 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall121 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall125", I32, ___syscall125 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall125 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall144", I32, ___syscall144 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall144 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall150", I32, ___syscall150 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall150 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall151", I32, ___syscall151 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall151 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall152", I32, ___syscall152 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall152 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall153", I32, ___syscall153 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall153 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall163", I32, ___syscall163 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall163 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall218", I32, ___syscall218 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall218 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall219", I32, ___syscall219 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall219 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall308", I32, ___syscall308 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall308 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall333", I32, ___syscall333 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall333 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall334", I32, ___syscall334 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall334 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall337", I32, ___syscall337 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall337 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall345", I32, ___syscall345 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall345 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall51", I32, ___syscall51 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall51 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_emscripten_longjmp", void, _emscripten_longjmp , I32 a, I32 b) {
 	util::getLogger()->debug("S - _emscripten_longjmp - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_gai_strerror", I32, _gai_strerror , I32 a) {
 	util::getLogger()->debug("S - _gai_strerror - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_getaddrinfo", I32, _getaddrinfo , I32 a, I32 b, I32 c, I32 d) {
 	util::getLogger()->debug("S - _getaddrinfo - {} {} {} {}", a, b, c, d);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_gethostbyaddr", I32, _gethostbyaddr , I32 a, I32 b, I32 c) {
 	util::getLogger()->debug("S - _gethostbyaddr - {} {} {}", a, b, c);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_gethostbyname", I32, _gethostbyname , I32 a) {
 	util::getLogger()->debug("S - _gethostbyname - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_getnameinfo", I32, _getnameinfo , I32 a, I32 b, I32 c, I32 d, I32 e, I32 f, I32 g) {
 	util::getLogger()->debug("S - _getnameinfo - {} {} {} {} {} {} {}", a, b, c, d, e, f, g);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_getprotobyname", I32, _getprotobyname , I32 a) {
 	util::getLogger()->debug("S - _getprotobyname - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_gmtime_r", I32, _gmtime_r , I32 a, I32 b) {
 	util::getLogger()->debug("S - _gmtime_r - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_inet_addr", I32, _inet_addr , I32 a) {
 	util::getLogger()->debug("S - _inet_addr - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_llvm_copysign_f32", F64, _llvm_copysign_f32 , F64 a, F64 b) {
 	util::getLogger()->debug("S - _llvm_copysign_f32 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_llvm_copysign_f64", F64, _llvm_copysign_f64 , F64 a, F64 b) {
 	util::getLogger()->debug("S - _llvm_copysign_f64 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_llvm_trap", void, _llvm_trap ) {
 	util::getLogger()->debug("S - _llvm_trap");
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_localtime_r", I32, _localtime_r , I32 a, I32 b) {
 	util::getLogger()->debug("S - _localtime_r - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_longjmp", void, _longjmp , I32 a, I32 b) {
 	util::getLogger()->debug("S - _longjmp - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_nanosleep", I32, _nanosleep , I32 a, I32 b) {
 	util::getLogger()->debug("S - _nanosleep - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_attr_destroy", I32, _pthread_attr_destroy , I32 a) {
 	util::getLogger()->debug("S - _pthread_attr_destroy - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_attr_init", I32, _pthread_attr_init , I32 a) {
 	util::getLogger()->debug("S - _pthread_attr_init - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_attr_setstacksize", I32, _pthread_attr_setstacksize , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_attr_setstacksize - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cleanup_pop", void, _pthread_cleanup_pop , I32 a) {
 	util::getLogger()->debug("S - _pthread_cleanup_pop - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cleanup_push", void, _pthread_cleanup_push , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_cleanup_push - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cond_destroy", I32, _pthread_cond_destroy , I32 a) {
 	util::getLogger()->debug("S - _pthread_cond_destroy - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cond_init", I32, _pthread_cond_init , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_cond_init - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cond_signal", I32, _pthread_cond_signal , I32 a) {
 	util::getLogger()->debug("S - _pthread_cond_signal - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cond_timedwait", I32, _pthread_cond_timedwait , I32 a, I32 b, I32 c) {
 	util::getLogger()->debug("S - _pthread_cond_timedwait - {} {} {}", a, b, c);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cond_wait", I32, _pthread_cond_wait , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_cond_wait - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_create", I32, _pthread_create , I32 a, I32 b, I32 c, I32 d) {
 	util::getLogger()->debug("S - _pthread_create - {} {} {} {}", a, b, c, d);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_detach", I32, _pthread_detach , I32 a) {
 	util::getLogger()->debug("S - _pthread_detach - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_equal", I32, _pthread_equal , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_equal - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_exit", void, _pthread_exit , I32 a) {
 	util::getLogger()->debug("S - _pthread_exit - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_getspecific", I32, _pthread_getspecific , I32 a) {
 	util::getLogger()->debug("S - _pthread_getspecific - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_join", I32, _pthread_join , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_join - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_key_create", I32, _pthread_key_create , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_key_create - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_key_delete", I32, _pthread_key_delete , I32 a) {
 	util::getLogger()->debug("S - _pthread_key_delete - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_mutex_destroy", I32, _pthread_mutex_destroy , I32 a) {
 	util::getLogger()->debug("S - _pthread_mutex_destroy - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_mutex_init", I32, _pthread_mutex_init , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_mutex_init - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_mutexattr_destroy", I32, _pthread_mutexattr_destroy , I32 a) {
 	util::getLogger()->debug("S - _pthread_mutexattr_destroy - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_mutexattr_init", I32, _pthread_mutexattr_init , I32 a) {
 	util::getLogger()->debug("S - _pthread_mutexattr_init - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_mutexattr_settype", I32, _pthread_mutexattr_settype , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_mutexattr_settype - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_once", I32, _pthread_once , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_once - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_setspecific", I32, _pthread_setspecific , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_setspecific - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_sigaddset", I32, _sigaddset , I32 a, I32 b) {
 	util::getLogger()->debug("S - _sigaddset - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_signal", I32, _signal , I32 a, I32 b) {
 	util::getLogger()->debug("S - _signal - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_utime", I32, _utime , I32 a, I32 b) {
 	util::getLogger()->debug("S - _utime - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

