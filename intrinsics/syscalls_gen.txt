DEFINE_INTRINSIC_FUNCTION(emEnv, "___clock_gettime", I32, ___clock_gettime , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___clock_gettime - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_current_primary_exception", I32, ___cxa_current_primary_exception ) {
 	util::getLogger()->debug("S - ___cxa_current_primary_exception");
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_decrement_exception_refcount", void, ___cxa_decrement_exception_refcount , I32 a) {
 	util::getLogger()->debug("S - ___cxa_decrement_exception_refcount - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_increment_exception_refcount", void, ___cxa_increment_exception_refcount , I32 a) {
 	util::getLogger()->debug("S - ___cxa_increment_exception_refcount - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_pure_virtual", void, ___cxa_pure_virtual ) {
 	util::getLogger()->debug("S - ___cxa_pure_virtual");
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_rethrow_primary_exception", void, ___cxa_rethrow_primary_exception , I32 a) {
 	util::getLogger()->debug("S - ___cxa_rethrow_primary_exception - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___cxa_uncaught_exception", I32, ___cxa_uncaught_exception ) {
 	util::getLogger()->debug("S - ___cxa_uncaught_exception");
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall114", I32, ___syscall114 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall114 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall121", I32, ___syscall121 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall121 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall125", I32, ___syscall125 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall125 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall144", I32, ___syscall144 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall144 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall150", I32, ___syscall150 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall150 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall151", I32, ___syscall151 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall151 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall152", I32, ___syscall152 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall152 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall153", I32, ___syscall153 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall153 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall163", I32, ___syscall163 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall163 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall218", I32, ___syscall218 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall218 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall219", I32, ___syscall219 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall219 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall308", I32, ___syscall308 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall308 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall333", I32, ___syscall333 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall333 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall334", I32, ___syscall334 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall334 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall337", I32, ___syscall337 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall337 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall345", I32, ___syscall345 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall345 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "___syscall51", I32, ___syscall51 , I32 a, I32 b) {
 	util::getLogger()->debug("S - ___syscall51 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_inet_addr", I32, _inet_addr , I32 a) {
 	util::getLogger()->debug("S - _inet_addr - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_llvm_copysign_f32", F64, _llvm_copysign_f32 , F64 a, F64 b) {
 	util::getLogger()->debug("S - _llvm_copysign_f32 - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_nanosleep", I32, _nanosleep , I32 a, I32 b) {
 	util::getLogger()->debug("S - _nanosleep - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cleanup_pop", void, _pthread_cleanup_pop , I32 a) {
 	util::getLogger()->debug("S - _pthread_cleanup_pop - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_cleanup_push", void, _pthread_cleanup_push , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_cleanup_push - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_equal", I32, _pthread_equal , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_equal - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_join", I32, _pthread_join , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_join - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_mutexattr_destroy", I32, _pthread_mutexattr_destroy , I32 a) {
 	util::getLogger()->debug("S - _pthread_mutexattr_destroy - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_mutexattr_init", I32, _pthread_mutexattr_init , I32 a) {
 	util::getLogger()->debug("S - _pthread_mutexattr_init - {}", a);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_mutexattr_settype", I32, _pthread_mutexattr_settype , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_mutexattr_settype - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

DEFINE_INTRINSIC_FUNCTION(emEnv, "_pthread_once", I32, _pthread_once , I32 a, I32 b) {
 	util::getLogger()->debug("S - _pthread_once - {} {}", a, b);
 	throwException(Runtime::ExceptionTypes::calledUnimplementedIntrinsic);
}

