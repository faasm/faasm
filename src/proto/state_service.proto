syntax = "proto3";

package message;

service StateService {
    rpc Pull (StateRequest) returns (StateResponse) {
    }
    rpc PullChunk (StateChunkRequest) returns (StateChunkResponse) {
    }
    rpc Push (StateRequest) returns (StateResponse) {
    }
    rpc Size(StateRequest) returns (StateSizeResponse) {
    }
    rpc PushChunk (StateChunkRequest) returns (StateResponse) {
    }
    rpc PushManyChunk (StateManyChunkRequest) returns (StateResponse) {
    }
    rpc Append (StateRequest) returns (StateResponse) {
    }
    rpc Shutdown (StateRequest) returns (StateResponse) {
    }
}

enum StateStatus {
    OK = 0;
    ERROR = 1;
    TIMEOUT = 2;
}

message StateRequest {
    string user = 1;
    string key = 2;
    bytes data = 3;
}

message StateChunkRequest {
    string user = 1;
    string key = 2;
    int64 offset = 3;
    bytes data = 4;
}

message StateManyChunkRequest {
    message StateChunk {
        int64 offset = 1;
        bytes data = 2;
    }
    string user = 1;
    string key = 2;
    repeated StateChunk chunks = 3;
}

message StateResponse {
    StateStatus status = 1;
    string user = 2;
    string key = 3;
    bytes data = 4;
}

message StateChunkResponse {
    string user = 1;
    string key = 2;
    int64 offset = 3;
    bytes data = 4;
}

message StateSizeResponse {
    string user = 1;
    string key = 2;
    bytes size = 3;
}
