enclave{
    include "../../../include/sgx/faasm_sgx_error.h"
    include "../../../third-party/wamr/core/iwasm/include/wasm_export.h"
    from "sgx_tstdc.edl" import *;
    trusted{
        public faasm_sgx_status_t sgx_wamr_enclave_unload_module(unsigned int thread_id);
        public faasm_sgx_status_t sgx_wamr_enclave_call_function(unsigned int thread_id, uint32_t func_id);
        public faasm_sgx_status_t sgx_wamr_enclave_load_module([user_check] const void* wasm_opcode_ptr, uint32_t wasm_opcode_size, [out] unsigned int* thread_id);
        public faasm_sgx_status_t sgx_wamr_enclave_init_wamr(unsigned int thread_number);
    };
    untrusted{
        void ocall_printf([in, string] const char* msg);
        void ocall_sgx_wamr_example_native_symbol([in, string] const char* msg);
        unsigned int ocall_faasm_chain_function_input([in, string] const char* name, [in, size=input_size] uint8_t* input, long input_size);
        unsigned int ocall_faasm_chain_this_input(int idx, [in, size=input_size] uint8_t* input, long input_size);
        unsigned int ocall_faasm_await_call(unsigned int call_id);
    };
};