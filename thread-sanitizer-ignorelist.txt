# Ignore ZeroMQ races
race:zmq::*
race:xsputn
# Config only changes in tests, and in places where being slightly racy doesn't matter
race:faabric::util::SystemConfig::*
race:conf::FaasmConfig::*
# Catch2 allocates in its signal handler, this prevents showing the wrong crash report
signal:*
# False positive in promise/future, which are thread-safe according to the standard
race:std::__future_base::_Result
race:std::future<*>::get

# Raciness inside webassembly openmp modules
race:wasm::startReduceCritical

# TODO: Remove: There's something weird going on with MPI code I don't understand
race:faabric::scheduler::MpiWorld::*
