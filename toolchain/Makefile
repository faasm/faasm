ROOT_DIR=${CURDIR}
LLVM_PROJ_DIR=$(ROOT_DIR)/../llvm-project
TOOLCHAIN_FILE=$(ROOT_DIR)/../toolchain/LLVMToolchain.cmake
LLVM_CONFIG=/usr/bin/llvm-config-8

FAASM_SYSROOT=/usr/local/faasm/llvm-sysroot

PREFIX=$(LLVM_PROJ_DIR)/install
BUILD_DIR=$(LLVM_PROJ_DIR)/build

default: build

clean:
	rm -rf build $(PREFIX)

$(BUILD_DIR)/compiler-rt.BUILT:
	mkdir -p $(BUILD_DIR)/compiler-rt
	cd $(BUILD_DIR)/compiler-rt; cmake -G Ninja \
		-DCMAKE_BUILD_TYPE=RelWithDebInfo \
		-DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE) \
		-DLLVM_CONFIG_PATH=$(LLVM_CONFIG) \
		-DCOMPILER_RT_BAREMETAL_BUILD=On \
		-DCOMPILER_RT_BUILD_XRAY=OFF \
		-DCOMPILER_RT_INCLUDE_TESTS=OFF \
		-DCOMPILER_RT_HAS_FPIC_FLAG=OFF \
		-DCOMPILER_RT_ENABLE_IOS=OFF \
		-DCOMPILER_RT_DEFAULT_TARGET_ONLY=On \
		-DCMAKE_INSTALL_PREFIX=$(PREFIX) \
		$(LLVM_PROJ_DIR)/compiler-rt/lib/builtins
	ninja -v -C $(BUILD_DIR)/compiler-rt install
	touch $(BUILD_DIR)/compiler-rt.BUILT

$(BUILD_DIR)/libcxx.BUILT: $(BUILD_DIR)/compiler-rt.BUILT
	mkdir -p $(BUILD_DIR)/libcxx
	cd $(BUILD_DIR)/libcxx; cmake -G Ninja \
		-DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE)\
		-DLLVM_CONFIG_PATH=$(LLVM_CONFIG) \
		-DCMAKE_CXX_COMPILER_WORKS=ON \
        -DCMAKE_C_COMPILER_WORKS=ON \
		-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
		-DLIBCXX_ENABLE_THREADS:BOOL=ON \
		-DLIBCXX_HAS_PTHREAD_API:BOOL=ON \
		-DLIBCXX_HAS_EXTERNAL_THREAD_API:BOOL=OFF \
		-DLIBCXX_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF \
		-DLIBCXX_HAS_WIN32_THREAD_API:BOOL=OFF \
		-DCMAKE_BUILD_TYPE=RelWithDebugInfo \
		-DLIBCXX_ENABLE_SHARED:BOOL=OFF \
		-DLIBCXX_ENABLE_EXPERIMENTAL_LIBRARY:BOOL=OFF \
		-DLIBCXX_ENABLE_EXCEPTIONS:BOOL=OFF \
		-DLIBCXX_ENABLE_FILESYSTEM:BOOL=ON \
		-DLIBCXX_CXX_ABI=libcxxabi \
		-DLIBCXX_CXX_ABI_INCLUDE_PATHS=$(LLVM_PROJ_DIR)/libcxxabi/include \
		-DLIBCXX_HAS_MUSL_LIBC:BOOL=ON \
		-DLIBCXX_ABI_VERSION=2 \
		--debug-trycompile \
		$(LLVM_PROJ_DIR)/libcxx
	ninja -v -C $(BUILD_DIR)/libcxx install
	touch $(BUILD_DIR)/libcxx.BUILT

$(BUILD_DIR)/libcxxabi.BUILT: $(BUILD_DIR)/libcxx.BUILT
	mkdir -p $(BUILD_DIR)/libcxxabi
	cd $(BUILD_DIR)/libcxxabi; cmake -G Ninja \
		-DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE) \
	    -DLLVM_CONFIG_PATH=$(LLVM_CONFIG) \
		-DCMAKE_CXX_COMPILER_WORKS=ON \
		-DCMAKE_C_COMPILER_WORKS=ON \
		-DLIBCXXABI_ENABLE_EXCEPTIONS:BOOL=OFF \
		-DLIBCXXABI_ENABLE_SHARED:BOOL=OFF \
		-DLIBCXXABI_SILENT_TERMINATE:BOOL=ON \
		-DLIBCXXABI_ENABLE_THREADS:BOOL=ON \
		-DLIBCXXABI_HAS_PTHREAD_API:BOOL=ON \
		-DLIBCXXABI_HAS_EXTERNAL_THREAD_API:BOOL=OFF \
		-DLIBCXXABI_BUILD_EXTERNAL_THREAD_LIBRARY:BOOL=OFF \
		-DLIBCXXABI_HAS_WIN32_THREAD_API:BOOL=OFF \
		-DLIBCXXABI_ENABLE_PIC:BOOL=OFF \
		-DLLVM_COMPILER_CHECKED=ON \
		-DCMAKE_BUILD_TYPE=RelWithDebugInfo \
		-DLIBCXXABI_LIBCXX_PATH=$(LLVM_PROJ_DIR)/libcxx \
		-DLIBCXXABI_LIBCXX_INCLUDES=$(FAASM_SYSROOT)/include/c++/v1 \
		-DCMAKE_C_FLAGS="-I$(FAASM_SYSROOT)/include" \
		-DCMAKE_CXX_FLAGS="-I$(FAASM_SYSROOT)/include/c++/v1" \
		-DUNIX:BOOL=ON \
		--debug-trycompile \
		$(LLVM_PROJ_DIR)/libcxxabi
	ninja -v -C $(BUILD_DIR)/libcxxabi install
	touch $(BUILD_DIR)/libcxxabi.BUILT

build: $(BUILD_DIR)/compiler-rt.BUILT $(BUILD_DIR)/libcxxabi.BUILT $(BUILD_DIR)/libcxx.BUILT

